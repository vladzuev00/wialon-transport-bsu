    Перед тем как трекер начнет отправлять пакеты с данными о своем состоянии, ему необходимо авторизоваться.
У каждого протокола есть соотвествующий для этого пакет, который содержит imei(уникальный идентификатор трекера, обязательный атрибут)
и пароль(необязательный атрибут).

    (1) - От трекера поступает набор байт, который приходит в pipeline сервера.
Внутри ProtocolDecoder-а выбирается соотвествующий ReqLoginPackageDecoder, который отвественен за
декодирование входящего пакета. Внутри выбранного ReqLoginPackageDecoder-а из полученного набора байт формируется java-объект
ReqLoginPackage, который представляет собой входящий пакет.

    (2) - Полученный java-объект передается дальше по pipeline-у и попадает ProtocolHandler.
Внутри ProtocolHandler-а выбирается соотвествующий ReqLoginPackageHandler, который отвественен за обработку входящего пакета.

    (3) - Проверяется существует ли в базе данных трекер с полученным imei и, если входящий пакет содержит пароль, то
проверяется соотвествует ли полученный пароль паролю, лежащему в базе данных. Если авторизация прошла успешно, то
трекер считается авторизованным, выполняются подготовительные действия к дальйшему приему пакетов с данными от трекера
и формируется соотвествующий ответ ResLoginPackage в виде java-объекта. Если авторизация прошла бузуспешно, то
просто формируется соотвествующий ответ ResLoginPackage в виде java-объекта.

    (4) - Полученный java-объект идет дальше по pipeline-у и попадает в ProtocolEncoder. Внутри ProtocolEncoder-а выбирается
соотвествующий ResLoginPackageEncoder, который отвественен за кодирование полученного объекта ResLoginPackage в набор байт.
Выполняется кодирование.

    (5) - Полученный набор байт отправляется трекеру в качестве ответа.